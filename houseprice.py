# -*- coding: utf-8 -*-
"""Houseprice.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RFfuTfM8KBgia2zI4i2-h-aooGZU8CC8
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

house = pd.read_csv('house.csv')
house.head()

house.shape

house.describe()

obj = (house.dtypes == 'object')
object_cols = list(obj[obj].index)
print("string variables:",len(object_cols))

int_ = (house.dtypes == 'int')
num_cols = list(int_[int_].index)
print("Integer variables:",len(num_cols))

fl = (house.dtypes == 'float')
fl_cols = list(fl[fl].index)
print("Float variables:",len(fl_cols))

house['pets_allowed'].replace(['yes', 'no'],[ 1 , 0], inplace=True)
print(house)

house.drop(['amentics'],axis=1,inplace=True)

house.isnull().sum()*100/house.shape[0]
print(house)

from sklearn.preprocessing import MinMaxScaler
import numpy as np

house_sklearn = house.copy()
column = ['square_feet' ]
house_sklearn[column] = MinMaxScaler().fit_transform(np.array(house_sklearn[column]).reshape(-1,1))
display(house_sklearn)

from sklearn.metrics import mean_absolute_error
from sklearn.model_selection import train_test_split
house_train , house_test = train_test_split(house, train_size = 0.8, test_size = 0.2, random_state = 0)

plt.figure(figsize = (16, 10))
sns.heatmap(house_train.corr(), annot = True, cmap="YlGnBu")
plt.show()

y_train = house_train.pop('price')
X_train = house_train

from sklearn.linear_model import LinearRegression
lr = LinearRegression()
lr.fit(X_train , y_train)

from sklearn.metrics import mean_absolute_percentage_error
model_lr = LinearRegression()
model_lr.fit(X_train, y_train)
Y_pred = model_lr.predict(X_train)

print(mean_absolute_percentage_error(y_train, Y_pred))

import pickle

with open ("module.pickle","wb") as f:
    pickle.dump(lr,f)